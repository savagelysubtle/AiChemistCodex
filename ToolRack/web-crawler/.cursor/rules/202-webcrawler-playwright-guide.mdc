---
description: WHEN working WITH PLAYWRIGHT
globs:
alwaysApply: false
---
<cursor-rule>
  <title>Playwright (JavaScript) Prompting Guide</title>
  <version>1.0.0</version>

  <context>
    <usage>Use this guide when requesting AI assistance specifically for Playwright (JavaScript/Node.js) tasks within the WebCrawler project.</usage>
    <objective>To get targeted help for writing Playwright scripts, handling dynamic content, interacting with pages, and managing configuration.</objective>
    <reference>Consult the Playwright section in the research doc: [Playwright Research](mdc:WebCrawler/scraping_libraries_research.md#2-playwright-javascriptpythonjavadotnet)</reference>
  </context>

  <requirements>
    <requirement>
      <name>Script Generation/Modification</name>
      <description>Ask for a new script structure (using `async/await`) or modifications to an existing `.js` file. Specify the target URL, browser type (chromium, firefox, webkit), and headless mode preference.</description>
      <example>
        <good>"Create a basic Playwright script (`scraper.js`) using chromium in headless mode to navigate to `https://example.com`."</good>
      </example>
    </requirement>
    <requirement>
      <name>Navigation and Waiting</name>
      <description>Specify the URL for `page.goto()`. If dealing with dynamic content, mention the specific element (`page.waitForSelector(...)`), network condition (`page.waitForNavigation(...)`, `page.waitForLoadState(...)`), function (`page.waitForFunction(...)`), or timeout (`page.waitForTimeout(...)`) needed before proceeding.</description>
      <example>
        <good>"After navigating to the page, wait for the element with id `#content` to appear before extracting data."</good>
      </example>
    </requirement>
    <requirement>
      <name>Element Selection</name>
      <description>Provide HTML snippets and ask for selectors to use with `page.locator(selector)` or `page.$(selector)` / `page.$$(selector)`.</description>
      <example>
        <good>"What Playwright locator can I use to select all `div` elements with the class `item`?"</good>
      </example>
    </requirement>
    <requirement>
      <name>Data Extraction</name>
      <description>Explain how to extract data using methods like `elementHandle.innerText()`, `elementHandle.textContent()`, `elementHandle.getAttribute()`, or complex extraction within `page.evaluate()`.</description>
      <example>
        <good>"Using `page.evaluate()`, extract the `href` attribute from all `a` tags inside the element with id `results`."</good>
      </example>
    </requirement>
    <requirement>
      <name>Page Interaction</name>
      <description>Ask for help with actions like `page.click(selector)`, `page.fill(selector, value)`, `page.selectOption(selector, value)`, or `page.press(selector, key)`.</description>
      <example>
        <good>"Show me how to fill the input field with name `username` with the value `testuser` and then click the button with id `submit-button`."</good>
      </example>
    </requirement>
    <requirement>
      <name>JSON Configuration Integration</name>
      <description>Request help reading a `config.json` file using Node.js `fs` module and applying settings like `startUrl`, `browserOptions`, or timeouts (`setDefaultNavigationTimeout`, `setDefaultTimeout`).</description>
      <reference>See [JSON Integration Example](mdc:WebCrawler/scraping_libraries_research.md#23-json-based-configuration-integration-javascript)</reference>
    </requirement>
    <requirement>
      <name>Manual Politeness</name>
      <description>Since Playwright lacks built-in politeness, ask for adding delays using `page.waitForTimeout(milliseconds)` between requests or actions if needed.</description>
    </requirement>
  </requirements>

  <examples>
    <good-practice>
      <description>A specific request for Playwright interaction.</description>
      <example>
"In my Playwright script, after `page.goto(url)`, I need to wait for the table with class `.data-table` to load fully. Then, using `page.evaluate`, iterate through its rows (`tr` elements) and extract the text from the second column (`td`) of each row into an array."
      </example>
    </good-practice>
    <bad-practice>
      <description>A vague request lacking Playwright context.</description>
      <example>
"Get the table data from the page."
      </example>
    </bad-practice>
  </examples>

</cursor-rule>

