---
description: 
globs: src/**,src**/*,**/*.ts
alwaysApply: false
---
// Example Tool Structure
import { Tool, type ToolRunParameters } from "@modelcontextprotocol/sdk";

interface MyToolParams {
    targetFile: string;
    content: string;
    // ... other params
}

export class MyTool extends Tool<MyToolParams, /* Return type, e.g., void or { status: string } */> {
    public readonly title = "My Example Tool";
    public readonly description = "Performs an action, e.g., writes to a file.";
    public readonly parameterDefinitions = {
        targetFile: { type: "string", description: "File path to write to", required: true },
        content: { type: "string", description: "Content to write", required: true },
        // ... other param definitions
    };

    public async run(params: ToolRunParameters<MyToolParams>): Promise</* Return type */> {
        // Implementation using params.parameters.targetFile, params.parameters.content
        // Perform async I/O (e.g., fs.promises.writeFile)
        // Validate inputs rigorously
        // Handle potential errors
        // Return void or a status object
    }
}